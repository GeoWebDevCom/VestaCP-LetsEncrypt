#!/bin/bash
# info: adding ssl for domain
# options: USER DOMAIN [SSL_HOME] [RESTART]
#
# Rewritten from Source File: v-add-web-domain-ssl
#
# Generates SSL Certs with Let's Encrypt Authority and setup
# VestaCP Domains.


#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument defenition
user=$1
domain=$(idn -t --quiet -u "$2" )
domain_idn=$(idn -t --quiet -a "$domain")
ssl_home=${3-same}
restart="$4"

# Other Definitions
vesta_path="/usr/local/vesta"		# VestaCP Base Path
le_client="/usr/local/letsencrypt"	# Path to the Let's Encrypt Client
le_path="/etc/letsencrypt"		# Path to Let's Encrypt Folder
le_age="5184000"			# Maximal age of the SSL Certs (60 Days)

# Includes
source $VESTA/func/main.sh
source $VESTA/func/domain.sh
source $VESTA/func/ip.sh
source $VESTA/conf/vesta.conf

# Generate Domain List including all aliases
function GenerateLSDomains () {
        $vesta_path/bin/v-list-web-domains-alias $1 | while read line
        do
                domains="-d $(echo $line | cut -d" " -f1)"
                aliases=$(echo $line | cut -d" " -f2)
                if [ $(echo $line | cut -d" " -f1) == $2 ]; then
                        IFS=',' read -a alias <<< "$aliases"
                        for d in "${alias[@]}"; do
                                domains=$domains" -d "$d
                        done
                        echo $domains
                fi
        done
}

#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '2' "$#" 'USER DOMAIN [SSL_HOME] [RESTART]'
validate_format 'user' 'domain'
is_system_enabled "$WEB_SYSTEM" 'WEB_SYSTEM'
is_system_enabled "$WEB_SSL" 'SSL_SUPPORT'
is_object_valid 'user' 'USER' "$user"
is_object_unsuspended 'user' 'USER' "$user"
is_object_valid 'web' 'DOMAIN' "$domain"
is_object_unsuspended 'web' 'DOMAIN' "$domain"
is_object_value_empty 'web' 'DOMAIN' "$domain" '$SSL'

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Parsing domain values
get_domain_values 'web'
conf="$HOMEDIR/$user/conf/web/s$WEB_SYSTEM.conf"
tpl_file="$WEBTPL/$WEB_SYSTEM/$WEB_BACKEND/$TPL.stpl"
SSL_HOME="$ssl_home"
ip=$(get_real_ip $IP)

# Let's Encrypt Base
le_base="$le_path/live/$domain"
le_mail=$($vesta_path/bin/v-get-user-value $user CONTACT)
le_cmd="$le_client/letsencrypt-auto -m $le_mail -t --renew-by-default
	--agree-tos --webroot -w /etc/letsencrypt"
le_error="Let's Encrypt Certificate Generation failed, please have
	a look in /var/log/letsencrypt/letsenrypt.log"

# Check if Certificate already exist...
if [ -f $le_base/fullchain.pem ]; then
	# ... and is not older then 60 days
	if ! [ "$(( $(date +"%s") - $(stat -c "%Y" $le_base/fullchain.pem) ))" -lt "$le_age" ]; then
		# Generate Let's Encrypt Certificate
		$le_cmd $(GenerateLSDomains "$user" "$domain") certonly >/dev/null 2>&1
	fi
else
	# Generate Let's Encrypt Certificate
	$le_cmd $(GenerateLSDomains "$user" "$domain") certonly >/dev/null 2>&1
fi

# Check if Cert Generation was successfully...
if ! [ -f $le_base/fullchain.pem ]; then
	exit 601
else
	# ... and is not older then 60 days
	if [ "$(( $(date +"%s") - $(stat -c "%Y" $le_base/fullchain.pem) ))" -gt "$le_age" ]; then
		exit 602
	fi
fi

# Preparing domain values for the template substitution
upd_web_domain_values

# Adding domain to the web config
add_web_config

chown root:$user $conf
chmod 640 $conf

# Adding certifiacte to user_data dir
cp -f $le_base/fullchain.pem 	$USER_DATA/ssl/$domain.pem
cp -f $le_base/privkey.pem 	$USER_DATA/ssl/$domain.key
cp -f $le_base/cert.pem 	$USER_DATA/ssl/$domain.crt
cp -f $le_base/chain.pem 	$USER_DATA/ssl/$domain.ca
chmod 660 $USER_DATA/ssl/$domain.*

# Adding certificate to user dir
cp -f $le_base/fullchain.pem 	$HOMEDIR/$user/conf/web/ssl.$domain.pem
cp -f $le_base/privkey.pem 	$HOMEDIR/$user/conf/web/ssl.$domain.key
cp -f $le_base/cert.pem 	$HOMEDIR/$user/conf/web/ssl.$domain.crt
cp -f $le_base/chain.pem 	$HOMEDIR/$user/conf/web/ssl.$domain.ca
chmod 660 $HOMEDIR/$user/conf/web/ssl.$domain.*

# Running template trigger
if [ -x $WEBTPL/$WEB_SYSTEM/$WEB_BACKEND/$template.sh ]; then
    $WEBTPL/$WEB_SYSTEM/$WEB_BACKEND/$template.sh \
        $user $domain $ip $HOMEDIR $sdocroot
fi

# Checking web config
web_conf="/etc/$WEB_SYSTEM/conf.d/vesta.conf"
if [ -z "$(grep "$conf" $web_conf)" ]; then
    echo "Include $conf" >> $web_conf
fi

# Checking proxy
if [ ! -z "$PROXY_SYSTEM" ] && [ ! -z "$PROXY" ]; then
    conf="$HOMEDIR/$user/conf/web/s$PROXY_SYSTEM.conf"
    tpl_file="$WEBTPL/$PROXY_SYSTEM/$PROXY.stpl"
    add_web_config

    chown root:$user $conf
    chmod 640 $conf

    # Checking proxy config
    proxy_conf="/etc/$PROXY_SYSTEM/conf.d/vesta.conf"
    if [ -z "$(grep "$conf" $proxy_conf )" ]; then
        echo "include $conf;" >> $proxy_conf
    fi
fi


#----------------------------------------------------------#
#                       Vesta                              #
#----------------------------------------------------------#

# Increasing domain value
increase_user_value "$user" '$U_WEB_SSL'

# Adding ssl values
update_object_value 'web' 'DOMAIN' "$domain" '$SSL_HOME' "$SSL_HOME"
update_object_value 'web' 'DOMAIN' "$domain" '$SSL' "yes"
update_object_value 'web' 'DOMAIN' "$domain" '$SSL_LE' "yes"

# Restarting web server
if [ "$restart" != 'no' ]; then
    $BIN/v-restart-web
    check_result $? "Web restart failed" >/dev/null

    if [ ! -z "$PROXY_SYSTEM" ]; then
        $BIN/v-restart-proxy
        check_result $? "Proxy restart failed" >/dev/null
    fi
fi

# Logging
log_history "enabled lets encrypt ssl support for $domain"
log_event "$OK" "$EVENT"

exit
